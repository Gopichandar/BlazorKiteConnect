@page "/login"
@using System.Web;


<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@OnLogin">Sign in with kite</MudButton>

@code{
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public HttpClient HttpClient { get; set; }

    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri); //you can use IURIHelper for older versions
        var queries = uri.Query == null ? null : HttpUtility.ParseQueryString(uri.Query);
        if (queries is not null && queries["status"] == "success" && queries["request_token"] is not null)
        {
            var response = await HttpClient.GetAsync("api/login/token?request_token=" + queries["request_token"]);
            if (response.IsSuccessStatusCode)
            {
                var currentUser = await response.Content.ReadFromJsonAsync<GetTokenReponse>();
                await ((CookieAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(currentUser.Data.Email);
                NavigationManager.NavigateTo("/", true);
            }
        }
    }   

    private void OnLogin()
    {
        NavigationManager.NavigateTo("/api/login/authorize", true);
    }
}