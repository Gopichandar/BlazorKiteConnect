@inherits LayoutComponentBase

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />


    @*<MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor/" Target="_blank" />
    </MudAppBar>*@
<AuthorizeView>
    <NotAuthorized>        
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>        
    </NotAuthorized>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="0">
                <MudTooltip Text="Toggle Drawer">
                    <MudIconButton Icon="@Icons.Rounded.Notes" Color="Color.Inherit" Edge="Edge.Start"
                        OnClick="@((e) => DrawerToggle())" />
                </MudTooltip>
                <MudSpacer/>
                <MudTooltip Text="Logout">
                    <MudIconButton Icon="@Icons.Rounded.Logout" Color="Color.Inherit" Edge="Edge.End"
                                   OnClick="@((e) => Logout())" />
                </MudTooltip>
            </MudAppBar>
            <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h6">Client</MudText>
                </MudDrawerHeader>
                <NavMenu />
            </MudDrawer>
            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
</AuthorizeView>    


@code {
    bool _drawerOpen = true;

    [Inject]
    public HttpClient HttpClient { get; set; }

    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async Task Logout()
    {
        var response = await HttpClient.DeleteAsync("api/logout");
        if (response.IsSuccessStatusCode)
        {
            await ((CookieAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsLoggedOut();
        }
    }
}